---
- hosts: virtualbox-vms
  vars_files:
    - secret/vars.yml
  become: true

  tasks:
  - name: Authorize my key on remote host.
    authorized_key: user={{ management_user }} key={{ lookup('file', lookup('env','HOME') + '/.ssh/id_rsa.pub') }}
    become: yes

  - name: Create user.
    user: name={{ project_name }} state=present

  - name: Update system.
    apt: update_cache=yes

  # - name: Upgrade system.
  #   apt: upgrade=dist

  - name: Install required system packages.
    apt: pkg={{ item }} state=installed update-cache=yes allow_unauthenticated=yes
    with_items: "{{ system_packages }}"

  - name: Create ssh directory to root user.
    file: path=/root/.ssh state=directory owner=root group=root mode=0700

  - name: Upload SSH key private root.
    copy: src={{ private_key_github }} dest=/root/.ssh/id_rsa mode=0400

  - name: Upload SSH key public root.
    copy: src={{ public_key_github }} dest=/root/.ssh/id_rsa.pub mode=0644

  - name: Pull sources from the repository.
    git: repo={{ project_repo }} dest={{ project_root }} version={{ branch }} accept_hostkey=True force=yes

  - name: Create virtualenv
    shell: /usr/bin/python3.5 -m venv {{ virtualenv_directory }}

  - name: Install requirements of Python project.
    pip: requirements={{ project_root }}/requirements.txt virtualenv={{ virtualenv_directory }}

  - name: Upload robots.txt configuration file.
    copy: src=secret/robots.txt dest={{ project_root }}

  - name: Change permissions.
    file: dest={{ project_home }} owner={{ project_name }} group={{ project_name }} recurse=yes

  - name: Install supervisor uwsgi configuration file.
    copy: src=secret/uwsgi.conf dest=/etc/supervisor/conf.d/{{ project_name }}_uwsgi.conf
    notify: restart supervisor

  ## Dependent tasks

  - name: Find default configurations of nginx sites-enabled.
    find: paths="/etc/nginx/sites-enabled"
    register: result

  - name: Remove files from sites-enabled of nginx.
    file: path={{ item.path }} state=absent
    with_items: 
      - "{{ result.files }}"

  ##

  - name: Upload nginx configuration file to sites-available.
    copy: src=secret/nginx.conf dest=/etc/nginx/sites-available/{{ project_name }}.conf

  - name: Upload nginx configuration file to sites-enabled.
    copy: src=secret/nginx.conf dest=/etc/nginx/sites-enabled/{{ project_name }}.conf
    notify: restart nginx

  - name: Enable supervisor on start.
    shell: update-rc.d supervisor defaults && update-rc.d supervisor enable

  - name: Create database.
    shell: SECRET_KEY={{ secret_key }} SERVER_NAME={{ server_name }} DATABASE_URI={{ database_uri }} python db_create.py

  handlers:
    - include: handlers.yml
